"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[917],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),g=l,k=d["".concat(i,".").concat(g)]||d[g]||u[g]||o;return n?a.createElement(k,r(r({ref:t},c),{},{components:n})):a.createElement(k,r({ref:t},c))}));function g(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,r=new Array(o);r[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,r[1]=s;for(var p=2;p<o;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1242:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var a=n(7462),l=n(3366),o=(n(7294),n(3905)),r=["components"],s={sidebar_position:5,data:"Internal Only"},i=void 0,p={unversionedId:"manual/gcp-gke",id:"manual/gcp-gke",isDocsHomePage:!1,title:"gcp-gke",description:"This is internal documentation. This document can be used only if it was recommended by the Support Team.",source:"@site/docs/manual/gcp-gke.md",sourceDirName:"manual",slug:"/manual/gcp-gke",permalink:"/xl-deploy-kubernetes-operator/docs/manual/gcp-gke",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,data:"Internal Only"},sidebar:"tutorialSidebar",previous:{title:"azure-aks",permalink:"/xl-deploy-kubernetes-operator/docs/manual/azure-aks"},next:{title:"setting-up-custom-namespace",permalink:"/xl-deploy-kubernetes-operator/docs/manual/setting-up-custom-namespace"}},c=[{value:"Create the cluster",id:"create-the-cluster",children:[],level:2},{value:"Storage class",id:"storage-class",children:[{value:"Compute Engine persistent disk CSI Driver",id:"compute-engine-persistent-disk-csi-driver",children:[],level:3}],level:2},{value:"Start operator",id:"start-operator",children:[{value:"Troubleshouting",id:"troubleshouting",children:[{value:"Token expired",id:"token-expired",children:[],level:4},{value:"Getting Error &quot;invalid character &#39;W&#39; looking for beginning of value&quot; during upgrade",id:"getting-error-invalid-character-w-looking-for-beginning-of-value-during-upgrade",children:[],level:4}],level:3}],level:2},{value:"Setting up Google Cloud Endpoints to use Google&#39;s DNS",id:"setting-up-google-cloud-endpoints-to-use-googles-dns",children:[],level:2},{value:"Delete the cluster",id:"delete-the-cluster",children:[],level:2}],u={toc:c};function d(e){var t=e.components,s=(0,l.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This is internal documentation. This document can be used only if it was recommended by the Support Team."))),(0,o.kt)("h1",{id:"google-cloud-platform-gke"},"Google Cloud Platform GKE"),(0,o.kt)("p",null,"Here it will be described how to install manually Deploy k8s cluster with help of operator to GCP GKE."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You should install ",(0,o.kt)("a",{parentName:"li",href:"https://cloud.google.com/sdk/docs/install"},"gcloud CLI locally")),(0,o.kt)("li",{parentName:"ul"},"Use kubernetes walkthrough, in the next section with ",(0,o.kt)("inlineCode",{parentName:"li"},"gcloud")," to setup k8s cluster. Here are more detailed description: ",(0,o.kt)("a",{parentName:"li",href:"https://cloud.google.com/kubernetes-engine/docs/quickstart"},"Quickstart")),(0,o.kt)("li",{parentName:"ul"},"Login with ",(0,o.kt)("inlineCode",{parentName:"li"},"gcloud")," cli with your google account and ",(0,o.kt)("a",{parentName:"li",href:"https://cloud.google.com/resource-manager/docs/creating-managing-projects"},"select or create project"),"  ")),(0,o.kt)("h2",{id:"create-the-cluster"},"Create the cluster"),(0,o.kt)("p",null,"Here are basic steps to setup k8s cluster"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"3 nodes"),(0,o.kt)("li",{parentName:"ul"},"machine type: ",(0,o.kt)("inlineCode",{parentName:"li"},"e2-standard-2")," - 2vCPUs, 8GB"),(0,o.kt)("li",{parentName:"ul"},"Kubernetes version: ",(0,o.kt)("inlineCode",{parentName:"li"},"1.20.11-gke.1801")),(0,o.kt)("li",{parentName:"ul"},"with GcePersistentDiskCsiDriver addon to enable ",(0,o.kt)("inlineCode",{parentName:"li"},"standard-rwo")," StorageClass")),(0,o.kt)("p",null,"Create an GCP GKE cluster"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f gcloud beta container --account "user@gmail.com" --project "apollo-playground" clusters create "gcp-gke-test-cluster" --zone  "us-central1-a" --release-channel "regular" --num-nodes "3" --machine-type "e2-standard-2" --cluster-version "1.20.11-gke.1801" --image-type "COS_CONTAINERD" --metadata disable-legacy-endpoints=true --logging=SYSTEM,WORKLOAD --monitoring=SYSTEM --enable-ip-alias --no-enable-master-authorized-networks --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver --enable-autoupgrade --enable-autorepair --enable-shielded-nodes \nNAME                  LOCATION       MASTER_VERSION    MASTER_IP      MACHINE_TYPE   NODE_VERSION      NUM_NODES  STATUS\ngcp-gke-test-cluster  us-central1-a  1.20.11-gke.1801  34.121.95.175  e2-standard-2  1.20.11-gke.1801  3          RUNNING\nWARNING: The Pod address range limits the maximum size of the cluster. Please refer to https://cloud.google.com/kubernetes-engine/docs/how-to/flexible-pod-cidr to learn how to optimize IP address allocation.\nCreating cluster gcp-gke-test-cluster in us-central1-a...\ndone.\nCreated [https://container.googleapis.com/v1beta1/projects/apollo-playground/zones/us-central1-a/clusters/gcp-gke-test-cluster].\nTo inspect the contents of your cluster, go to: https://console.cloud.google.com/kubernetes/workload_/gcloud/us-central1-a/gcp-gke-test-cluster?project=apollo-playground\nkubeconfig entry generated for gcp-gke-test-cluster.\n')),(0,o.kt)("p",null,"Result on the GCP console:\n",(0,o.kt)("img",{alt:"gke-cluster-list",src:n(5018).Z})),(0,o.kt)("p",null,"Connect to the cluster"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f gcloud beta container --account "user@gmail.com" --project "apollo-playground" clusters get-credentials "gcp-gke-test-cluster" --zone "us-central1-a"\nFetching cluster endpoint and auth data.\nkubeconfig entry generated for gcp-gke-test-cluster.\n')),(0,o.kt)("p",null,"Check if your cluster is fully functional"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get node\nNAME                                                  STATUS   ROLES    AGE   VERSION\ngke-gcp-gke-test-cluster-default-pool-d354d6a9-0627   Ready    <none>   35m   v1.20.11-gke.1801\ngke-gcp-gke-test-cluster-default-pool-d354d6a9-0ljz   Ready    <none>   35m   v1.20.11-gke.1801\ngke-gcp-gke-test-cluster-default-pool-d354d6a9-bgfb   Ready    <none>   35m   v1.20.11-gke.1801\n")),(0,o.kt)("p",null,"You can take now the keys and URL and update ",(0,o.kt)("inlineCode",{parentName:"p"},"deploy-operator-gcp-gke/digitalai-deploy/infrastructure.yaml"),". Following are mappings:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"center"},"Field name"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Path to the cert"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"apiServerURL"),(0,o.kt)("td",{parentName:"tr",align:"center"},"~/.kube/config:clusters","[","name=gke_apollo-playground_us-central1-a_gcp-gke-test-cluster","]",".cluster.server")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"caCert"),(0,o.kt)("td",{parentName:"tr",align:"center"},"~/.kube/config:clusters","[","name=gke_apollo-playground_us-central1-a_gcp-gke-test-cluster","]",".cluster.certificate-authority-data")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"token"),(0,o.kt)("td",{parentName:"tr",align:"center"},"~/.kube/config:users","[","name=gke_apollo-playground_us-central1-a_gcp-gke-test-cluster","]",".user.auth-provider.config.access-token")))),(0,o.kt)("p",null,"You can use base64 encoded values from the ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.kube/config"),", as is, in that case, from the ",(0,o.kt)("inlineCode",{parentName:"p"},"infrastructure.yaml"),"."),(0,o.kt)("h2",{id:"storage-class"},"Storage class"),(0,o.kt)("p",null,"Get default storage class"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get storageclass\nNAME           PROVISIONER             RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE\npremium-rwo    pd.csi.storage.gke.io   Delete          WaitForFirstConsumer   true                   49m\nstandard       kubernetes.io/gce-pd    Delete          Immediate              true                   49m\nstandard-rwo   pd.csi.storage.gke.io   Delete          WaitForFirstConsumer   true                   49m\n")),(0,o.kt)("p",null,"It is already set in the ",(0,o.kt)("inlineCode",{parentName:"p"},"daideploy_cr.yaml"),"."),(0,o.kt)("h3",{id:"compute-engine-persistent-disk-csi-driver"},"Compute Engine persistent disk CSI Driver"),(0,o.kt)("p",null,"When during cluster creation we have enabled addon ",(0,o.kt)("inlineCode",{parentName:"p"},"GcePersistentDiskCsiDriver"),", it can be enabled after creation too:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u276f gcloud container clusters update "gcp-gke-test-cluster" --update-addons=GcePersistentDiskCsiDriver=ENABLED\n')),(0,o.kt)("p",null,"There are enabled 2 storage classes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"standard-rwo"),(0,o.kt)("li",{parentName:"ul"},"premium-rwo")),(0,o.kt)("p",null,"Update the storageClass in the ",(0,o.kt)("inlineCode",{parentName:"p"},"daideploy_cr.yaml")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"standard-rwo")," on paths:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"spec.postgresql.persistence.storageClass")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"spec.rabbitmq.persistence.storageClass"),".")),(0,o.kt)("p",null,"For details check ",(0,o.kt)("a",{parentName:"p",href:"https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/gce-pd-csi-driver"},"Using the Compute Engine persistent disk CSI Driver")),(0,o.kt)("h2",{id:"start-operator"},"Start operator"),(0,o.kt)("p",null,"To be able to connect to deploy via Google's Endpoints, update ",(0,o.kt)("inlineCode",{parentName:"p"},"daideploy_cr.yaml")," on following places:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"spec.ingress.hosts")," update first element to ",(0,o.kt)("inlineCode",{parentName:"li"},"gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"spec.route.hosts")," update first element to ",(0,o.kt)("inlineCode",{parentName:"li"},"gcp-gke-test-cluster"))),(0,o.kt)("p",null,"Run following command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"xl apply -v -f digital-ai.yaml \n")),(0,o.kt)("p",null,"Check services in shell:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get services\nNAME                                               TYPE           CLUSTER-IP    EXTERNAL-IP     PORT(S)                                 AGE\ndai-xld-digitalai-deploy-lb                        ClusterIP      10.8.1.157    <none>          4516/TCP                                48m\ndai-xld-digitalai-deploy-master                    ClusterIP      None          <none>          8180/TCP                                48m\ndai-xld-digitalai-deploy-worker                    ClusterIP      None          <none>          8180/TCP                                48m\ndai-xld-nginx-ingress-controller                   LoadBalancer   10.8.0.3      34.123.52.153   80:30407/TCP,443:32022/TCP              48m\ndai-xld-nginx-ingress-controller-default-backend   ClusterIP      10.8.14.173   <none>          80/TCP                                  48m\ndai-xld-postgresql                                 ClusterIP      10.8.8.82     <none>          5432/TCP                                48m\ndai-xld-postgresql-headless                        ClusterIP      None          <none>          5432/TCP                                48m\ndai-xld-rabbitmq                                   ClusterIP      10.8.1.116    <none>          5672/TCP,4369/TCP,25672/TCP,15672/TCP   48m\ndai-xld-rabbitmq-headless                          ClusterIP      None          <none>          4369/TCP,5672/TCP,25672/TCP,15672/TCP   48m\nkubernetes                                         ClusterIP      10.8.0.1      <none>          443/TCP                                 51m\n")),(0,o.kt)("p",null,"The final result on GCP console, all should be running (running all with 1 master and 2 worker replicas) with list of pods and services :\n",(0,o.kt)("img",{alt:"gke-services",src:n(4213).Z})),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"gke-ingress",src:n(840).Z})),(0,o.kt)("h3",{id:"troubleshouting"},"Troubleshouting"),(0,o.kt)("h4",{id:"token-expired"},"Token expired"),(0,o.kt)("p",null,"If you work for longer period on the same cluster, token that is used is possible to expire. Use following 2 commands to get new token:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"first one to get new context for the cluster:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f gcloud beta container --account "user@gmail.com" --project "apollo-playground" --zone "us-central1-a" clusters get-credentials "gcp-gke-test-cluster"\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"second one to get access token value:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f gcloud auth application-default print-access-token\n")),(0,o.kt)("p",null,"With new access token value update in the xl-deploy that used for operator deployment, on CI ",(0,o.kt)("inlineCode",{parentName:"p"},"Infrastructure/k8s-infra/xld")," property ",(0,o.kt)("inlineCode",{parentName:"p"},"token"),"."),(0,o.kt)("h4",{id:"getting-error-invalid-character-w-looking-for-beginning-of-value-during-upgrade"},"Getting Error \"invalid character 'W' looking for beginning of value\" during upgrade"),(0,o.kt)("p",null,"This error is caused by new changes that come with a new kubectl plugin called \u201cgke-gcloud-auth-plugin\u201d. As explained ",(0,o.kt)("a",{parentName:"p",href:"https://cloud.google.com/blog/products/containers-kubernetes/kubectl-auth-changes-in-gke"},"here")," "),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Existing versions of kubectl and custom Kubernetes clients contain provider-specific code to manage authentication between the client and Google Kubernetes Engine. Starting with v1.25, this code will no longer be included as part of the OSS kubectl. GKE users will need to download and use a separate authentication plugin to generate GKE-specific tokens. This new binary, gke-gcloud-auth-plugin, uses the Kubernetes Client-go Credential Plugin mechanism to extend kubectl\u2019s authentication to support GKE. ")),(0,o.kt)("p",null,"Steps to install and start using new plugin (you can also find these steps in the GCP guide linked above):"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Authentication plugin installation instructions"),(0,o.kt)("p",{parentName:"li"},"For Windows and OS X "),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"gcloud components install gke-gcloud-auth-plugin\n")),(0,o.kt)("p",{parentName:"li"},"For DEB based systems"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin\n")),(0,o.kt)("p",{parentName:"li"},"For RPM based systems"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"sudo yum install google-cloud-sdk-gke-gcloud-auth-plugin\n")),(0,o.kt)("p",{parentName:"li"},"If you are using GCP terminal, this plugin should already be installed. In that case, only the next step is needed.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run kubectl with the new plugin"),(0,o.kt)("p",{parentName:"li"},"To have kubectl use the new binary plugin for authentication instead of using the default provider-specific code, use the following steps. "),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Set export USE_GKE_GCLOUD_AUTH_PLUGIN=True in ~/.bashrc (or in Environment variables for Windows).")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run the following command: "),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"source ~/.bashrc\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Update gcloud to the latest version. "),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"}," gcloud components update\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run the following command: "),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"}," gcloud container clusters get-credentials CLUSTER_NAME\n")))))),(0,o.kt)("h2",{id:"setting-up-google-cloud-endpoints-to-use-googles-dns"},"Setting up Google Cloud Endpoints to use Google's DNS"),(0,o.kt)("p",null,"Here we will setup Google Cloud Endpoints. For setting up details check ",(0,o.kt)("a",{parentName:"p",href:"https://cloud.google.com/endpoints/docs/openapi/deploy-endpoints-config"},"Deploying the Endpoints configuration")),(0,o.kt)("p",null,"The final URL will be in the following example: ",(0,o.kt)("a",{parentName:"p",href:"http://gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog/xl-deploy/#/explorer"},"http://gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog/xl-deploy/#/explorer")),(0,o.kt)("p",null,"After successful startup of the operator, check following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get ing\nNAME                       CLASS    HOSTS                                                         ADDRESS        PORTS   AGE\ndai-xld-digitalai-deploy   <none>   gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog   34.70.40.169   80      92m\n")),(0,o.kt)("p",null,"Hosts should be same as we set ",(0,o.kt)("inlineCode",{parentName:"p"},"spec.ingress.hosts"),"."),(0,o.kt)("p",null,"Get the IP of deployed application"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f kubectl get service/dai-xld-nginx-ingress-controller -o "jsonpath={.status.loadBalancer.ingress[*].ip}"\n34.123.52.153\n')),(0,o.kt)("p",null,"Create file ",(0,o.kt)("inlineCode",{parentName:"p"},"dns-openapi.yaml")," to specify google cloud endpoint with correct IP from previous command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'swagger: "2.0"\nhost: "gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog"\nx-google-endpoints:\n- name: "gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog"\n  target: "34.123.52.153"\ninfo:\n  title: "gcp-gke-test-cluster in apollo-playground"\n  version: 1.0.0\npaths: {}\n')),(0,o.kt)("p",null,"Apply specification:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u276f gcloud endpoints --project apollo-playground --account "user@gmail.com services deploy ./dns-openapi.yaml"\nWaiting for async operation operations/serviceConfigs.gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog:1bac952f-0216-4694-bf89-44ebe3e56c0b to complete...\nOperation finished successfully. The following command can describe the Operation details:\ngcloud endpoints operations describe operations/serviceConfigs.gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog:1bac952f-0216-4694-bf89-44ebe3e56c0b\n\nWaiting for async operation operations/rollouts.gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog:4934d786-8527-42cc-bc46-77642d7d9f44 to complete...\nOperation finished successfully. The following command can describe the Operation details:\ngcloud endpoints operations describe operations/rollouts.gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog:4934d786-8527-42cc-bc46-77642d7d9f44\n\nService Configuration [2021-12-10r0] uploaded for service [gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog]\n\nTo manage your API, go to: https://console.cloud.google.com/endpoints/api/gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog/overview?project=apollo-playground\n')),(0,o.kt)("p",null,"After creation check the GCP console:\n",(0,o.kt)("img",{alt:"gke-endpoints",src:n(5538).Z})),(0,o.kt)("h2",{id:"delete-the-cluster"},"Delete the cluster"),(0,o.kt)("p",null,"Clean up your unnecessary resources, use the az group delete command to remove the resource group, container service, and all related resources."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f gcloud beta container --account "user@gmail.com" --project "apollo-playground" clusters delete "gcp-gke-test-cluster" --zone "us-central1-a" --quiet\n')),(0,o.kt)("p",null,"Clean up DNS service on Google's endpoints service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f gcloud endpoints --project apollo-playground  services delete "gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog"\n')))}d.isMDXComponent=!0},5018:function(e,t,n){t.Z=n.p+"assets/images/gke-cluster-list-e3151927149887c9913cfce690d8d447.png"},5538:function(e,t,n){t.Z=n.p+"assets/images/gke-endpoints-8c5b457aa16cbf0810c8206276d35727.png"},840:function(e,t,n){t.Z=n.p+"assets/images/gke-ingress-bf49e411ce410423b45e6a333fa31ff0.png"},4213:function(e,t,n){t.Z=n.p+"assets/images/gke-services-131900d29ff3219619ab16b8335052ef.png"}}]);