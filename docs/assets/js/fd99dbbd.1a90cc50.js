"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[917],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var l=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,o=function(e,t){if(null==e)return{};var n,l,o={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=l.createContext({}),c=function(e){var t=l.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return l.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),g=o,k=d["".concat(i,".").concat(g)]||d[g]||u[g]||a;return n?l.createElement(k,r(r({ref:t},p),{},{components:n})):l.createElement(k,r({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var c=2;c<a;c++)r[c]=n[c];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1242:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var l=n(7462),o=n(3366),a=(n(7294),n(3905)),r=["components"],s={sidebar_position:5},i="Google Cloud Platform GKE",c={unversionedId:"manual/gcp-gke",id:"manual/gcp-gke",isDocsHomePage:!1,title:"Google Cloud Platform GKE",description:"Here it will be described how to install manually Deploy k8s cluster with help of operator to GCP GKE.",source:"@site/docs/manual/gcp-gke.md",sourceDirName:"manual",slug:"/manual/gcp-gke",permalink:"/xl-deploy-kubernetes-operator/docs/manual/gcp-gke",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Azure AKS",permalink:"/xl-deploy-kubernetes-operator/docs/manual/azure-aks"},next:{title:"Updating configuration files on Deploy",permalink:"/xl-deploy-kubernetes-operator/docs/manual/updating-configuration-files"}},p=[{value:"Create the cluster",id:"create-the-cluster",children:[],level:2},{value:"Storage class",id:"storage-class",children:[{value:"Compute Engine persistent disk CSI Driver",id:"compute-engine-persistent-disk-csi-driver",children:[],level:3}],level:2},{value:"Start operator",id:"start-operator",children:[{value:"Troubleshouting",id:"troubleshouting",children:[],level:3}],level:2},{value:"Setting up Google Cloud Endpoints to use Google&#39;s DNS",id:"setting-up-google-cloud-endpoints-to-use-googles-dns",children:[],level:2},{value:"Delete the cluster",id:"delete-the-cluster",children:[],level:2}],u={toc:p};function d(e){var t=e.components,s=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,l.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"google-cloud-platform-gke"},"Google Cloud Platform GKE"),(0,a.kt)("p",null,"Here it will be described how to install manually Deploy k8s cluster with help of operator to GCP GKE."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You should install ",(0,a.kt)("a",{parentName:"li",href:"https://cloud.google.com/sdk/docs/install"},"gcloud CLI locally")),(0,a.kt)("li",{parentName:"ul"},"Use kubernetes walkthrough, in the next section with ",(0,a.kt)("inlineCode",{parentName:"li"},"gcloud")," to setup k8s cluster. Here are more detailed description: ",(0,a.kt)("a",{parentName:"li",href:"https://cloud.google.com/kubernetes-engine/docs/quickstart"},"Quickstart")),(0,a.kt)("li",{parentName:"ul"},"Login with ",(0,a.kt)("inlineCode",{parentName:"li"},"gcloud")," cli with your google account and ",(0,a.kt)("a",{parentName:"li",href:"https://cloud.google.com/resource-manager/docs/creating-managing-projects"},"select or create project"),"  ")),(0,a.kt)("h2",{id:"create-the-cluster"},"Create the cluster"),(0,a.kt)("p",null,"Here are basic steps to setup k8s cluster"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"3 nodes"),(0,a.kt)("li",{parentName:"ul"},"machine type: ",(0,a.kt)("inlineCode",{parentName:"li"},"e2-standard-2")," - 2vCPUs, 8GB"),(0,a.kt)("li",{parentName:"ul"},"Kubernetes version: ",(0,a.kt)("inlineCode",{parentName:"li"},"1.20.11-gke.1801")),(0,a.kt)("li",{parentName:"ul"},"with GcePersistentDiskCsiDriver addon to enable ",(0,a.kt)("inlineCode",{parentName:"li"},"standard-rwo")," StorageClass")),(0,a.kt)("p",null,"Create an GCP GKE cluster"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f gcloud beta container --account "user@gmail.com" --project "apollo-playground" clusters create "gcp-gke-test-cluster" --zone  "us-central1-a" --release-channel "regular" --num-nodes "3" --machine-type "e2-standard-2" --cluster-version "1.20.11-gke.1801" --image-type "COS_CONTAINERD" --metadata disable-legacy-endpoints=true --logging=SYSTEM,WORKLOAD --monitoring=SYSTEM --enable-ip-alias --no-enable-master-authorized-networks --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver --enable-autoupgrade --enable-autorepair --enable-shielded-nodes \nNAME                  LOCATION       MASTER_VERSION    MASTER_IP      MACHINE_TYPE   NODE_VERSION      NUM_NODES  STATUS\ngcp-gke-test-cluster  us-central1-a  1.20.11-gke.1801  34.121.95.175  e2-standard-2  1.20.11-gke.1801  3          RUNNING\nWARNING: The Pod address range limits the maximum size of the cluster. Please refer to https://cloud.google.com/kubernetes-engine/docs/how-to/flexible-pod-cidr to learn how to optimize IP address allocation.\nCreating cluster gcp-gke-test-cluster in us-central1-a...\ndone.\nCreated [https://container.googleapis.com/v1beta1/projects/apollo-playground/zones/us-central1-a/clusters/gcp-gke-test-cluster].\nTo inspect the contents of your cluster, go to: https://console.cloud.google.com/kubernetes/workload_/gcloud/us-central1-a/gcp-gke-test-cluster?project=apollo-playground\nkubeconfig entry generated for gcp-gke-test-cluster.\n')),(0,a.kt)("p",null,"Result on the GCP console:\n",(0,a.kt)("img",{alt:"gke-cluster-list",src:n(5018).Z})),(0,a.kt)("p",null,"Connect to the cluster"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f gcloud beta container --account "user@gmail.com" --project "apollo-playground" clusters get-credentials "gcp-gke-test-cluster" --zone "us-central1-a"\nFetching cluster endpoint and auth data.\nkubeconfig entry generated for gcp-gke-test-cluster.\n')),(0,a.kt)("p",null,"Check if your cluster is fully functional"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get node\nNAME                                                  STATUS   ROLES    AGE   VERSION\ngke-gcp-gke-test-cluster-default-pool-d354d6a9-0627   Ready    <none>   35m   v1.20.11-gke.1801\ngke-gcp-gke-test-cluster-default-pool-d354d6a9-0ljz   Ready    <none>   35m   v1.20.11-gke.1801\ngke-gcp-gke-test-cluster-default-pool-d354d6a9-bgfb   Ready    <none>   35m   v1.20.11-gke.1801\n")),(0,a.kt)("p",null,"You can take now the keys and URL and update ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy-operator-gcp-gke/digitalai-deploy/infrastructure.yaml"),". Following are mappings:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"center"},"Field name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Path to the cert"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"apiServerURL"),(0,a.kt)("td",{parentName:"tr",align:"center"},"~/.kube/config:clusters","[","name=gke_apollo-playground_us-central1-a_gcp-gke-test-cluster","]",".cluster.server")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"caCert"),(0,a.kt)("td",{parentName:"tr",align:"center"},"~/.kube/config:clusters","[","name=gke_apollo-playground_us-central1-a_gcp-gke-test-cluster","]",".cluster.certificate-authority-data")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"token"),(0,a.kt)("td",{parentName:"tr",align:"center"},"~/.kube/config:users","[","name=gke_apollo-playground_us-central1-a_gcp-gke-test-cluster","]",".user.auth-provider.config.access-token")))),(0,a.kt)("p",null,"You can use base64 encoded values from the ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.kube/config"),", as is, in that case, from the ",(0,a.kt)("inlineCode",{parentName:"p"},"infrastructure.yaml"),"."),(0,a.kt)("h2",{id:"storage-class"},"Storage class"),(0,a.kt)("p",null,"Get default storage class"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get storageclass\nNAME           PROVISIONER             RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE\npremium-rwo    pd.csi.storage.gke.io   Delete          WaitForFirstConsumer   true                   49m\nstandard       kubernetes.io/gce-pd    Delete          Immediate              true                   49m\nstandard-rwo   pd.csi.storage.gke.io   Delete          WaitForFirstConsumer   true                   49m\n")),(0,a.kt)("p",null,"It is already set in the ",(0,a.kt)("inlineCode",{parentName:"p"},"daideploy_cr.yaml"),"."),(0,a.kt)("h3",{id:"compute-engine-persistent-disk-csi-driver"},"Compute Engine persistent disk CSI Driver"),(0,a.kt)("p",null,"When during cluster creation we have enabled addon ",(0,a.kt)("inlineCode",{parentName:"p"},"GcePersistentDiskCsiDriver"),", it can be enabled after creation too:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u276f gcloud container clusters update "gcp-gke-test-cluster" --update-addons=GcePersistentDiskCsiDriver=ENABLED\n')),(0,a.kt)("p",null,"There are enabled 2 storage classes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"standard-rwo"),(0,a.kt)("li",{parentName:"ul"},"premium-rwo")),(0,a.kt)("p",null,"Update the storageClass in the ",(0,a.kt)("inlineCode",{parentName:"p"},"daideploy_cr.yaml")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"standard-rwo")," on paths:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"spec.postgresql.persistence.storageClass")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"spec.rabbitmq.persistence.storageClass"),".")),(0,a.kt)("p",null,"For details check ",(0,a.kt)("a",{parentName:"p",href:"https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/gce-pd-csi-driver"},"Using the Compute Engine persistent disk CSI Driver")),(0,a.kt)("h2",{id:"start-operator"},"Start operator"),(0,a.kt)("p",null,"To be able to connect to deploy via Google's Endpoints, update ",(0,a.kt)("inlineCode",{parentName:"p"},"daideploy_cr.yaml")," on following places:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"spec.ingress.hosts")," update first element to ",(0,a.kt)("inlineCode",{parentName:"li"},"gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"spec.route.hosts")," update first element to ",(0,a.kt)("inlineCode",{parentName:"li"},"gcp-gke-test-cluster"))),(0,a.kt)("p",null,"Run following command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"xl apply -v -f digital-ai.yaml \n")),(0,a.kt)("p",null,"Check services in shell:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get services\nNAME                                               TYPE           CLUSTER-IP    EXTERNAL-IP     PORT(S)                                 AGE\ndai-xld-digitalai-deploy-lb                        ClusterIP      10.8.1.157    <none>          4516/TCP                                48m\ndai-xld-digitalai-deploy-master                    ClusterIP      None          <none>          8180/TCP                                48m\ndai-xld-digitalai-deploy-worker                    ClusterIP      None          <none>          8180/TCP                                48m\ndai-xld-nginx-ingress-controller                   LoadBalancer   10.8.0.3      34.123.52.153   80:30407/TCP,443:32022/TCP              48m\ndai-xld-nginx-ingress-controller-default-backend   ClusterIP      10.8.14.173   <none>          80/TCP                                  48m\ndai-xld-postgresql                                 ClusterIP      10.8.8.82     <none>          5432/TCP                                48m\ndai-xld-postgresql-headless                        ClusterIP      None          <none>          5432/TCP                                48m\ndai-xld-rabbitmq                                   ClusterIP      10.8.1.116    <none>          5672/TCP,4369/TCP,25672/TCP,15672/TCP   48m\ndai-xld-rabbitmq-headless                          ClusterIP      None          <none>          4369/TCP,5672/TCP,25672/TCP,15672/TCP   48m\nkubernetes                                         ClusterIP      10.8.0.1      <none>          443/TCP                                 51m\n")),(0,a.kt)("p",null,"The final result on GCP console, all should be running (running all with 1 master and 2 worker replicas) with list of pods and services :\n",(0,a.kt)("img",{alt:"gke-services",src:n(4213).Z})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"gke-ingress",src:n(840).Z})),(0,a.kt)("h3",{id:"troubleshouting"},"Troubleshouting"),(0,a.kt)("p",null,"If you work for longer period on the same cluster, token that is used is possible to expire. Use following 2 commands to get new token:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"first one to get new context for the cluster:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f gcloud beta container --account "user@gmail.com" --project "apollo-playground" --zone "us-central1-a" clusters get-credentials "gcp-gke-test-cluster"\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"second one to get access token value:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f gcloud auth application-default print-access-token\n")),(0,a.kt)("p",null,"With new access token value update in the xl-deploy that used for operator deployment, on CI ",(0,a.kt)("inlineCode",{parentName:"p"},"Infrastructure/k8s-infra/xld")," property ",(0,a.kt)("inlineCode",{parentName:"p"},"token"),"."),(0,a.kt)("h2",{id:"setting-up-google-cloud-endpoints-to-use-googles-dns"},"Setting up Google Cloud Endpoints to use Google's DNS"),(0,a.kt)("p",null,"Here we will setup Google Cloud Endpoints. For setting up details check ",(0,a.kt)("a",{parentName:"p",href:"https://cloud.google.com/endpoints/docs/openapi/deploy-endpoints-config"},"Deploying the Endpoints configuration")),(0,a.kt)("p",null,"The final URL will be in the following example: ",(0,a.kt)("a",{parentName:"p",href:"http://gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog/xl-deploy/#/explorer"},"http://gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog/xl-deploy/#/explorer")),(0,a.kt)("p",null,"After successful startup of the operator, check following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get ing\nNAME                       CLASS    HOSTS                                                         ADDRESS        PORTS   AGE\ndai-xld-digitalai-deploy   <none>   gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog   34.70.40.169   80      92m\n")),(0,a.kt)("p",null,"Hosts should be same as we set ",(0,a.kt)("inlineCode",{parentName:"p"},"spec.ingress.hosts"),"."),(0,a.kt)("p",null,"Get the IP of deployed application"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f kubectl get service/dai-xld-nginx-ingress-controller -o "jsonpath={.status.loadBalancer.ingress[*].ip}"\n34.123.52.153\n')),(0,a.kt)("p",null,"Create file ",(0,a.kt)("inlineCode",{parentName:"p"},"dns-openapi.yaml")," to specify google cloud endpoint with correct IP from previous command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'swagger: "2.0"\nhost: "gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog"\nx-google-endpoints:\n- name: "gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog"\n  target: "34.123.52.153"\ninfo:\n  title: "gcp-gke-test-cluster in apollo-playground"\n  version: 1.0.0\npaths: {}\n')),(0,a.kt)("p",null,"Apply specification:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u276f gcloud endpoints --project apollo-playground --account "user@gmail.com services deploy ./dns-openapi.yaml"\nWaiting for async operation operations/serviceConfigs.gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog:1bac952f-0216-4694-bf89-44ebe3e56c0b to complete...\nOperation finished successfully. The following command can describe the Operation details:\ngcloud endpoints operations describe operations/serviceConfigs.gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog:1bac952f-0216-4694-bf89-44ebe3e56c0b\n\nWaiting for async operation operations/rollouts.gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog:4934d786-8527-42cc-bc46-77642d7d9f44 to complete...\nOperation finished successfully. The following command can describe the Operation details:\ngcloud endpoints operations describe operations/rollouts.gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog:4934d786-8527-42cc-bc46-77642d7d9f44\n\nService Configuration [2021-12-10r0] uploaded for service [gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog]\n\nTo manage your API, go to: https://console.cloud.google.com/endpoints/api/gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog/overview?project=apollo-playground\n')),(0,a.kt)("p",null,"After creation check the GCP console:\n",(0,a.kt)("img",{alt:"gke-endpoints",src:n(5538).Z})),(0,a.kt)("h2",{id:"delete-the-cluster"},"Delete the cluster"),(0,a.kt)("p",null,"Clean up your unnecessary resources, use the az group delete command to remove the resource group, container service, and all related resources."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f gcloud beta container --account "user@gmail.com" --project "apollo-playground" clusters delete "gcp-gke-test-cluster" --zone "us-central1-a" --quiet\n')),(0,a.kt)("p",null,"Clean up DNS service on Google's endpoints service:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f gcloud endpoints --project apollo-playground  services delete "gcp-gke-test-cluster.endpoints.apollo-playground.cloud.goog"\n')))}d.isMDXComponent=!0},5018:function(e,t,n){t.Z=n.p+"assets/images/gke-cluster-list-e3151927149887c9913cfce690d8d447.png"},5538:function(e,t,n){t.Z=n.p+"assets/images/gke-endpoints-8c5b457aa16cbf0810c8206276d35727.png"},840:function(e,t,n){t.Z=n.p+"assets/images/gke-ingress-bf49e411ce410423b45e6a333fa31ff0.png"},4213:function(e,t,n){t.Z=n.p+"assets/images/gke-services-131900d29ff3219619ab16b8335052ef.png"}}]);