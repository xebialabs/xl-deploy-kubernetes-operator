"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[61],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),u=s(a),m=o,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return a?n.createElement(f,l(l({ref:t},c),{},{components:a})):n.createElement(f,l({ref:t},c))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,l=new Array(i);l[0]=u;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r.mdxType="string"==typeof e?e:o,l[1]=r;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},522:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return r},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var n=a(7462),o=a(3366),i=(a(7294),a(3905)),l=["components"],r={sidebar_position:6},p="Updating configuration files on Deploy",s={unversionedId:"manual/updating-configuration-files",id:"manual/updating-configuration-files",isDocsHomePage:!1,title:"Updating configuration files on Deploy",description:"Prerequisites",source:"@site/docs/manual/updating-configuration-files.md",sourceDirName:"manual",slug:"/manual/updating-configuration-files",permalink:"/xl-deploy-kubernetes-operator/docs/manual/updating-configuration-files",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Google Cloud Platform GKE",permalink:"/xl-deploy-kubernetes-operator/docs/manual/gcp-gke"},next:{title:"Adding truststore files",permalink:"/xl-deploy-kubernetes-operator/docs/manual/updating-truststore-files"}},c=[{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Example how to update deployit.conf for Deploy master and worker",id:"example-how-to-update-deployitconf-for-deploy-master-and-worker",children:[],level:2},{value:"Update configuration file generic example for Deploy",id:"update-configuration-file-generic-example-for-deploy",children:[],level:2},{value:"Upgrade process if you have updated files with config maps",id:"upgrade-process-if-you-have-updated-files-with-config-maps",children:[],level:2},{value:"Update configuration file for RabbitMQ",id:"update-configuration-file-for-rabbitmq",children:[],level:2},{value:"Update configuration file for PostgreSql",id:"update-configuration-file-for-postgresql",children:[],level:2},{value:"Upgrade process if you have updated the CR values",id:"upgrade-process-if-you-have-updated-the-cr-values",children:[],level:2}],d={toc:c};function u(e){var t=e.components,a=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"updating-configuration-files-on-deploy"},"Updating configuration files on Deploy"),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Linux environment "),(0,i.kt)("li",{parentName:"ul"},"The kubectl command-line tool "),(0,i.kt)("li",{parentName:"ul"},"The yq command-line tool (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/mikefarah/yq/releases"},"Use the latest binary"),")"),(0,i.kt)("li",{parentName:"ul"},"Access to a Kubernetes cluster with installed Deploy")),(0,i.kt)("h2",{id:"example-how-to-update-deployitconf-for-deploy-master-and-worker"},"Example how to update deployit.conf for Deploy master and worker"),(0,i.kt)("p",null,"Get current deployit.conf file from the master node:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl cp dai-xld-digitalai-deploy-master-0:/opt/xebialabs/xl-deploy-server/conf/deployit.conf ./deployit.conf\n")),(0,i.kt)("p",null,"Create following template file to append to it the retrieved ",(0,i.kt)("inlineCode",{parentName:"p"},"./deployit.conf"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f echo 'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: deployit-conf\n  labels:\n    app: digitalai-deploy\ndata:\n  deployit.conf: |\n  ' > config-patch-deployit.yaml.template\n")),(0,i.kt)("p",null,"Merge the files:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f cat config-patch-deployit.yaml.template > config-patch-deployit.yaml\n\u276f sed -e 's/^/     /' deployit.conf >> config-patch-deployit.yaml\n")),(0,i.kt)("p",null,"Change the config in the ",(0,i.kt)("inlineCode",{parentName:"p"},"config-patch-deployit.yaml"),"."),(0,i.kt)("p",null,"Create the config map with ",(0,i.kt)("inlineCode",{parentName:"p"},"config-patch-deployit.yaml"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl create -f config-patch-deployit.yaml\n")),(0,i.kt)("p",null,"Get all statefulsets (master statefulset will be suffixed with ",(0,i.kt)("inlineCode",{parentName:"p"},"-master"),"):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get sts -o name\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you create additional configuration like in following lines note that in during next upgrade process you need create custom image like described\n",(0,i.kt)("a",{parentName:"p",href:"#upgrade-process-if-you-have-updated-files-with-config-maps"},"in the section")))),(0,i.kt)("p",null,"Change the statefulset for the master server by adding volume mounts and volumes:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f kubectl get statefulset.apps/dai-xld-digitalai-deploy-master -o yaml \\\n    | yq eval \'.spec.template.spec.containers[0].volumeMounts += {\n        "mountPath": "/opt/xebialabs/xl-deploy-server/conf/deployit.conf",\n        "name": "deployit-conf-volume",\n        "subPath": "deployit.conf"\n      }\' - \\\n    | yq eval \'.spec.template.spec.volumes += [{\n        "name": "deployit-conf-volume",\n        "configMap": {\n          "name": "deployit-conf"\n        }\n      }]\' - \\\n    | kubectl replace -f -\n')),(0,i.kt)("p",null,"Restart Deploy masters:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl delete pod dai-xld-digitalai-deploy-master-0\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Latest Deploy workers does not have ",(0,i.kt)("inlineCode",{parentName:"p"},"conf/deployit.conf")," files, so it is not needed to do following step, all versions below 10.3 require it."))),(0,i.kt)("p",null,"Change the statefulset for the worker by adding volume mounts and volumes:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'\u276f kubectl get statefulset.apps/dai-xld-digitalai-deploy-worker -o yaml \\\n    | yq eval \'.spec.template.spec.containers[0].volumeMounts += {\n        "mountPath": "/opt/xebialabs/xl-deploy-server/conf",\n        "name": "deployit-conf-template-volume",\n        "subPath": "deployit.conf"\n      }\' - \\\n    | yq eval \'.spec.template.spec.volumes += [{\n        "name": "deployit-conf-template-volume",\n        "configMap": {\n          "name": "deployit-conf-template"\n        }\n      }]\' - \\\n    | kubectl replace -f -\n')),(0,i.kt)("p",null,"Restart Deploy workers:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get pod\n\u276f kubectl delete pod dai-xld-digitalai-deploy-worker-0\n")),(0,i.kt)("h2",{id:"update-configuration-file-generic-example-for-deploy"},"Update configuration file generic example for Deploy"),(0,i.kt)("p",null,"You can use following way to update any configuration file on the Deploy in the ",(0,i.kt)("inlineCode",{parentName:"p"},"centralConfiguration")," or in the ",(0,i.kt)("inlineCode",{parentName:"p"},"conf")," directory."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The files in ",(0,i.kt)("inlineCode",{parentName:"p"},"centralConfiguration")," need to be updated for master nodes. The files are not needed on worker nodes."),(0,i.kt)("p",{parentName:"div"},"The files in ",(0,i.kt)("inlineCode",{parentName:"p"},"conf")," (like from the previous example ",(0,i.kt)("inlineCode",{parentName:"p"},"conf/deployit.conf"),") need to be updated for master and worker nodes (if they exist on the worker node for the specific version)."))),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"In the following example, we are changing the template file from the ",(0,i.kt)("inlineCode",{parentName:"p"},"central-conf"),", not the direct configuration file from the ",(0,i.kt)("inlineCode",{parentName:"p"},"centralConfiguration"),".\nThe reason for that is in that way we are able to change environment variables in the container via deploy CR. Those variables are used during the startup of the pod.\nto evaluate template placeholders to the target file in the ",(0,i.kt)("inlineCode",{parentName:"p"},"centralConfiguration")," folder."),(0,i.kt)("p",{parentName:"div"},"Please note, for Deploy, the files from the ",(0,i.kt)("inlineCode",{parentName:"p"},"default-conf")," directory are only evaluated in the same way if there is no already such file in the conf directory.  "))),(0,i.kt)("p",null,"Get info to list deploy master and worker pod names and statefulsets:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get pod -o name\nkubectl get sts -o name\n")),(0,i.kt)("p",null,"Setup environment vals:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"change ",(0,i.kt)("inlineCode",{parentName:"li"},"CONFIG_FILE")," variable and ",(0,i.kt)("inlineCode",{parentName:"li"},"PATH_TO_CONFIG_FILE")," to :")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"export PRODUCT=deploy\nexport POD_NAME=dai-xld-digitalai-deploy-master-0\nexport CONFIG_FILE=deploy-repository.yaml.template\nexport CONFIG_FILE_DASH=${CONFIG_FILE//./-}\nexport PATH_TO_CONFIG_FILE=/opt/xebialabs/xl-$PRODUCT-server/central-conf/$CONFIG_FILE\nexport STATEFUL_SET_NAME=statefulset.apps/dai-xld-digitalai-deploy-master\n")),(0,i.kt)("p",null,"Run set of commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl cp $POD_NAME:$PATH_TO_CONFIG_FILE ./$CONFIG_FILE\n\necho \"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: $CONFIG_FILE_DASH-config-map\n  labels:\n    app: digitalai-$PRODUCT\ndata:\n  $CONFIG_FILE: |\" > config-patch-${CONFIG_FILE}.yaml.template\n  \ncat config-patch-${CONFIG_FILE}.yaml.template > config-patch-${CONFIG_FILE}.yaml\nsed -e 's/^/     /' $CONFIG_FILE >> config-patch-${CONFIG_FILE}.yaml\n")),(0,i.kt)("p",null,"Edit the YAML file and add your custom changes to it: ",(0,i.kt)("inlineCode",{parentName:"p"},"config-patch-${CONFIG_FILE}.yaml"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"vi config-patch-${CONFIG_FILE}.yaml\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you create an additional configuration like in the following lines note that during the next upgrade process you need to create a custom image like described\n",(0,i.kt)("a",{parentName:"p",href:"#upgrade-process-if-you-have-updated-files-with-config-maps"},"in the section")))),(0,i.kt)("p",null,"Create config map on cluster and use it:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl create -f config-patch-${CONFIG_FILE}.yaml\nkubectl get $STATEFUL_SET_NAME -o yaml \\\n    | yq eval ".spec.template.spec.containers[0].volumeMounts += {\n        \\"mountPath\\": \\"$PATH_TO_CONFIG_FILE\\",\n        \\"name\\": \\"$CONFIG_FILE_DASH-volume\\",\n        \\"subPath\\": \\"$CONFIG_FILE\\"\n      }" - \\\n    | yq eval ".spec.template.spec.volumes += [{\n        \\"name\\": \\"$CONFIG_FILE_DASH-volume\\",\n        \\"configMap\\": {\n          \\"name\\": \\"$CONFIG_FILE_DASH-config-map\\"\n        }\n      }]" - \\\n    | kubectl replace -f -\nkubectl delete pod $POD_NAME\n')),(0,i.kt)("h2",{id:"upgrade-process-if-you-have-updated-files-with-config-maps"},"Upgrade process if you have updated files with config maps"),(0,i.kt)("p",null,"To preserve configuration changes after upgrades, you will need to build custom images of the operator with all custom changes in\nthe statefulsets:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Checkout correct branch for the Deploy helm chart with the target version branch of the operator from here: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/xebialabs/xl-deploy-kubernetes-helm-chart"},"xl-deploy-kubernetes-helm-chart")),(0,i.kt)("li",{parentName:"ol"},"Build the operator with the provided script in the root of the repository: ",(0,i.kt)("inlineCode",{parentName:"li"},"./build_operator.sh")),(0,i.kt)("li",{parentName:"ol"},"Release the operator to the image repository according to the script's guide"),(0,i.kt)("li",{parentName:"ol"},"Use the newly created image as the answer during ",(0,i.kt)("inlineCode",{parentName:"li"},"xl op --upgrade")," execution:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Operator image to use (OperatorImageDeploy)")))),(0,i.kt)("li",{parentName:"ol"},"After the upgrade, if the upgrade changes the configuration files, transfer the changes to the config-map so the changes could be preserved. ")),(0,i.kt)("h2",{id:"update-configuration-file-for-rabbitmq"},"Update configuration file for RabbitMQ"),(0,i.kt)("p",null,"To change configuration of the RabbitMQ use available parameters on the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitnami/charts/tree/master/bitnami/rabbitmq#parameters"},"RabbitMQ packaged by Bitnami")),(0,i.kt)("h2",{id:"update-configuration-file-for-postgresql"},"Update configuration file for PostgreSql"),(0,i.kt)("p",null,"To change configuration of the PostgreSql use available parameters on the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitnami/charts/tree/master/bitnami/postgresql#parameters"},"PostgreSQL packaged by Bitnami")),(0,i.kt)("h2",{id:"upgrade-process-if-you-have-updated-the-cr-values"},"Upgrade process if you have updated the CR values"),(0,i.kt)("p",null,"To preserve changed values in the CR use the following:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Download operator zip version from the ",(0,i.kt)("a",{parentName:"li",href:"https://dist.xebialabs.com/customer/operator/deploy/"},"deploy operator zip"),"\nwith specific provider and version that you will install"),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"xl op --upgrade")," with answers:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Do you want to use a custom operator zip file for Deploy? (UseOperatorZipDeploy): Yes\nDeploy operator zip to use (absolute path or URL to the zip) (OperatorZipDeploy): [Path to the zip file that you downloaded]\nEdit list of custom resource keys that will migrate to the new Deploy CR (PreserveCrValuesDeploy): [Check comment below]\n")),(0,i.kt)("p",null,"Add all paths where you updated CR values from the original value."))}u.isMDXComponent=!0}}]);