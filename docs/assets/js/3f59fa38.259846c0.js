"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[620],{3905:function(e,a,t){t.d(a,{Zo:function(){return p},kt:function(){return u}});var l=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function r(e,a){if(null==e)return{};var t,l,n=function(e,a){if(null==e)return{};var t,l,n={},i=Object.keys(e);for(l=0;l<i.length;l++)t=i[l],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)t=i[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var d=l.createContext({}),s=function(e){var a=l.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},p=function(e){var a=s(e.components);return l.createElement(d.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},c=l.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,d=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),c=s(t),u=n,k=c["".concat(d,".").concat(u)]||c[u]||m[u]||i;return t?l.createElement(k,o(o({ref:a},p),{},{components:t})):l.createElement(k,o({ref:a},p))}));function u(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=c;var r={};for(var d in a)hasOwnProperty.call(a,d)&&(r[d]=a[d]);r.originalType=e,r.mdxType="string"==typeof e?e:n,o[1]=r;for(var s=2;s<i;s++)o[s]=t[s];return l.createElement.apply(null,o)}return l.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8607:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return r},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var l=t(7462),n=t(3366),i=(t(7294),t(3905)),o=["components"],r={sidebar_position:14},d="How to change namespace of the PVC",s={unversionedId:"manual/move_pvc_to_other_namespace",id:"manual/move_pvc_to_other_namespace",isDocsHomePage:!1,title:"How to change namespace of the PVC",description:"This is internal documentation. This document can be used only if it was recommended by the Support Team.",source:"@site/docs/manual/move_pvc_to_other_namespace.md",sourceDirName:"manual",slug:"/manual/move_pvc_to_other_namespace",permalink:"/xl-deploy-kubernetes-operator/docs/manual/move_pvc_to_other_namespace",tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"tutorialSidebar",previous:{title:"How to change namespace with downtime",permalink:"/xl-deploy-kubernetes-operator/docs/manual/change-namespace-for-xld-10.3-with-downtime"},next:{title:"Manual helm to operator upgrade of xld from version 10 to above 22.1 version.",permalink:"/xl-deploy-kubernetes-operator/docs/manual/manual-upgrade-for-xld-10"}},p=[{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"C.1. Backup everything",id:"c1-backup-everything",children:[],level:2},{value:"C.2. Be sure to not delete PVs with your actions",id:"c2-be-sure-to-not-delete-pvs-with-your-actions",children:[],level:2},{value:"C.3. Stop everything that is using XLD PVC-s (and other PVC if needed)",id:"c3-stop-everything-that-is-using-xld-pvc-s-and-other-pvc-if-needed",children:[],level:2},{value:"C.4. Move existing PVC to the custom namespace",id:"c4-move-existing-pvc-to-the-custom-namespace",children:[{value:"C.4.OPTION_1 Create PVC in the custom namespace by copying PV data",id:"c4option_1-create-pvc-in-the-custom-namespace-by-copying-pv-data",children:[{value:"C.4.OPTION_1.1 Make the copy of the <code>pvc-data-dir-dai-xld-digitalai-deploy-master-0.yaml</code> for the later reference, to the <code>pvc-data-dir-dai-xld-digitalai-deploy-master-0-nsxld.yaml</code>.",id:"c4option_11-make-the-copy-of-the-pvc-data-dir-dai-xld-digitalai-deploy-master-0yaml-for-the-later-reference-to-the-pvc-data-dir-dai-xld-digitalai-deploy-master-0-nsxldyaml",children:[],level:4},{value:"C.4.OPTION_1.2",id:"c4option_12",children:[{value:"C.4.OPTION_1.2 Master - Start following pods",id:"c4option_12-master---start-following-pods",children:[],level:5},{value:"C.4.OPTION_1.2 Worker - Start following pods",id:"c4option_12-worker---start-following-pods",children:[],level:5}],level:4}],level:3},{value:"C.4.OPTION_2 Move existing PVC to the custom namespace by reusing PV",id:"c4option_2-move-existing-pvc-to-the-custom-namespace-by-reusing-pv",children:[{value:"C.4.OPTION_2.1 Make the copy of the <code>pvc-data-dir-dai-xld-digitalai-deploy-master-0.yaml</code> for the later reference, to the <code>pvc-data-dir-dai-xld-digitalai-deploy-master-0-nsxld.yaml</code>.",id:"c4option_21-make-the-copy-of-the-pvc-data-dir-dai-xld-digitalai-deploy-master-0yaml-for-the-later-reference-to-the-pvc-data-dir-dai-xld-digitalai-deploy-master-0-nsxldyaml",children:[],level:4}],level:3},{value:"C.4.OPTION_3 Clone existing PVC to the custom namespace by CSI Volume Cloning",id:"c4option_3-clone-existing-pvc-to-the-custom-namespace-by-csi-volume-cloning",children:[],level:3}],level:2}],m={toc:p};function c(e){var a=e.components,t=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,l.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-change-namespace-of-the-pvc"},"How to change namespace of the PVC"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This is internal documentation. This document can be used only if it was recommended by the Support Team."))),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This setup is deprecated from the 22.3 version."))),(0,i.kt)("h1",{id:"c-how-to-change-namespace-of-the-pvc"},"C. How to change namespace of the PVC"),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The kubectl command-line tool"),(0,i.kt)("li",{parentName:"ul"},"Access to a Kubernetes cluster with installed Deploy in the ",(0,i.kt)("inlineCode",{parentName:"li"},"default")," namespace")),(0,i.kt)("p",null,"Tested with:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"xl-deploy 10.3.9"),(0,i.kt)("li",{parentName:"ul"},"xl-cli 22.1.4"),(0,i.kt)("li",{parentName:"ul"},"AWS EKS cluster")),(0,i.kt)("h2",{id:"c1-backup-everything"},"C.1. Backup everything"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Before doing any of the following steps backup everything:"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"database data"),(0,i.kt)("li",{parentName:"ul"},"any custom configuration that was done for the operator setup",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"StatefulSets"),(0,i.kt)("li",{parentName:"ul"},"Deployments"),(0,i.kt)("li",{parentName:"ul"},"ConfigMaps"),(0,i.kt)("li",{parentName:"ul"},"Secrets"),(0,i.kt)("li",{parentName:"ul"},"CustomResource"),(0,i.kt)("li",{parentName:"ul"},"anything else that was customized"))),(0,i.kt)("li",{parentName:"ul"},"any volume related to deploy master in the default namespace, for example data from the mounted volumes on the deploy master pod:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/central-conf/deploy-server.yaml.template"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/centralConfiguration/deploy-oidc.yaml  "),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/work"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/conf"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/centralConfiguration"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/ext"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/hotfix/lib"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/hotfix/plugins"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/hotfix/satellite-lib"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/log"))),(0,i.kt)("li",{parentName:"ul"},"any volume related to deploy worker in the default namespace, for example data from the mounted volumes on the deploy worker pod:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/work"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/conf"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/centralConfiguration"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/ext"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/hotfix/lib"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/hotfix/plugins"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/hotfix/satellite-lib"),(0,i.kt)("li",{parentName:"ul"},"/opt/xebialabs/xl-deploy-server/log")))))),(0,i.kt)("h2",{id:"c2-be-sure-to-not-delete-pvs-with-your-actions"},"C.2. Be sure to not delete PVs with your actions"),(0,i.kt)("p",null,"Patch the all PVs to set the \u201cpersistentVolumeReclaimPolicy\u201d to \u201cRetain\u201d, for example (if cluster admin's didn't do that already):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'\u276f kubectl get pv\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                                                STORAGECLASS          REASON   AGE\npvc-4fa67d64-8763-464f-890b-0ba4124a780c   8Gi        RWO            Delete           Bound    default/data-dai-xld-rabbitmq-0                      aws-efs-provisioner            29m\npvc-5b6a8575-3017-43c1-92ab-41ee1e0fd3b1   10Gi       RWO            Delete           Bound    default/data-dir-dai-xld-digitalai-deploy-worker-0   aws-efs-provisioner            29m\npvc-8055342d-51e2-4d3d-8066-f2efcb16f658   10Gi       RWO            Delete           Bound    default/data-dir-dai-xld-digitalai-deploy-master-0   aws-efs-provisioner            29m\npvc-fe787f3c-3036-49fe-a0d9-6f09db5510f2   50Gi       RWO            Delete           Bound    default/data-dai-xld-postgresql-0                    aws-efs-provisioner            29m\n...\n\n\u276f kubectl patch pv pvc-8055342d-51e2-4d3d-8066-f2efcb16f658 -p \'{"spec":{"persistentVolumeReclaimPolicy":"Retain"}}\'\npersistentvolume/pvc-53564205-6e1e-45f0-9dcf-e21adefa6eaf patched\n')),(0,i.kt)("p",null,"Export the current PVCs objects because it will be necessary to recreate the PVCs in a later stage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl get pvc data-dir-dai-xld-digitalai-deploy-master-0 -n default -o yaml > pvc-data-dir-dai-xld-digitalai-deploy-master-0.yaml\n\n\u276f kubectl get pvc data-dir-dai-xld-digitalai-deploy-worker-0 -n default -o yaml > pvc-data-dir-dai-xld-digitalai-deploy-worker-0.yaml\n\n\u276f kubectl get pvc data-dai-xld-postgresql-0 -n default -o yaml > pvc-data-dai-xld-postgresql-0.yaml\n")),(0,i.kt)("p",null,"Iterate on all PVs that are connected to the XLD PVCs in the default namespace, list depends on the installed components.\nFor example, here is list of PVCs that are usually in the default namespace:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"data-dir-dai-xld-digitalai-deploy-master-0"),(0,i.kt)("li",{parentName:"ul"},"data-dir-dai-xld-digitalai-deploy-worker-0  "),(0,i.kt)("li",{parentName:"ul"},"data-dai-xld-postgresql-0"),(0,i.kt)("li",{parentName:"ul"},"data-dai-xld-rabbitmq-0")),(0,i.kt)("p",null,"On the end check if all PVs have correct Reclaim Policy:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl get pv\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                                                STORAGECLASS          REASON   AGE\npvc-4fa67d64-8763-464f-890b-0ba4124a780c   8Gi        RWO            Retain           Bound    default/data-dai-xld-rabbitmq-0                      aws-efs-provisioner            32m\npvc-5b6a8575-3017-43c1-92ab-41ee1e0fd3b1   10Gi       RWO            Retain           Bound    default/data-dir-dai-xld-digitalai-deploy-worker-0   aws-efs-provisioner            32m\npvc-8055342d-51e2-4d3d-8066-f2efcb16f658   10Gi       RWO            Retain           Bound    default/data-dir-dai-xld-digitalai-deploy-master-0   aws-efs-provisioner            32m\npvc-fe787f3c-3036-49fe-a0d9-6f09db5510f2   50Gi       RWO            Retain           Bound    default/data-dai-xld-postgresql-0                    aws-efs-provisioner            32m\n")),(0,i.kt)("h2",{id:"c3-stop-everything-that-is-using-xld-pvc-s-and-other-pvc-if-needed"},"C.3. Stop everything that is using XLD PVC-s (and other PVC if needed)"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Be sure that you did backup of the CR before this step!"))),(0,i.kt)("p",null,"If you are sure that everything is backuped and ready for installation on the new custom namespace, you can destroy previous setup on the ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," namespace,\nhere are steps how to do that:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# get the CR on default namespace and delete it\n\u276f kubectl get digitalaideploys.xld.digital.ai -n default -o yaml > cr-dai-xld-default.yaml\n\u276f kubectl delete -n default -f cr-dai-xld-default.yaml\n\n# get the deployment on default namespace and delete it\n\u276f kubectl get deployment -n default\n\u276f kubectl delete -n default deployment xld-operator-controller-manager\n\n# get the service on default namespace and delete it\n\u276f kubectl get service -n default\n\u276f kubectl delete -n default service xld-operator-controller-manager-metrics-service\n\n# get the role on default namespace and delete it\n\u276f kubectl get roles -n default\n\u276f kubectl delete -n default roles xld-operator-leader-election-role\n\n# get the roleBinding on default namespace and delete it\n\u276f kubectl get roleBinding -n default\n\u276f kubectl delete -n default roleBinding xld-operator-leader-election-rolebinding\n\n# get clusterRoles related to XLD on default namespace and delete them\n\u276f kubectl get clusterRoles\n\u276f kubectl delete clusterRoles xld-operator-manager-role xld-operator-metrics-reader xld-operator-proxy-role\n\n# get clusterRoleBinding related to XLD on default namespace and delete them\n\u276f kubectl get clusterRoleBinding\n\u276f kubectl delete clusterRoleBinding xld-operator-proxy-rolebinding xld-operator-manager-rolebinding\n")),(0,i.kt)("p",null,"Do not delete PVs or PVCs we can reuse them on the new namespace."),(0,i.kt)("h2",{id:"c4-move-existing-pvc-to-the-custom-namespace"},"C.4. Move existing PVC to the custom namespace"),(0,i.kt)("p",null,"Select one option that the best suites for your case."),(0,i.kt)("p",null,"Iterate one of the selected options on all PVs and PVCs that are connected to the XLD PVCs in the default namespace, list depends on the installed components.\nFor example, here is list of PVCs that are usually in the default namespace:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"data-dir-dai-xld-digitalai-deploy-master-0 - recommended is option C.4.OPTION_1"),(0,i.kt)("li",{parentName:"ul"},"data-dir-dai-xld-digitalai-deploy-worker-0 - recommended is option C.4.OPTION_1"),(0,i.kt)("li",{parentName:"ul"},"data-dai-xld-postgresql-0 - if embedded DB is used the best is to use C.4.OPTION_2"),(0,i.kt)("li",{parentName:"ul"},"data-dai-xld-rabbitmq-0 - if embedded rabbitmq is used you can skip rabbitmq PVC migration, rabbitmq in the new namespace will use new PVC and PV in that case. ")),(0,i.kt)("h3",{id:"c4option_1-create-pvc-in-the-custom-namespace-by-copying-pv-data"},"C.4.OPTION_1 Create PVC in the custom namespace by copying PV data"),(0,i.kt)("h4",{id:"c4option_11-make-the-copy-of-the-pvc-data-dir-dai-xld-digitalai-deploy-master-0yaml-for-the-later-reference-to-the-pvc-data-dir-dai-xld-digitalai-deploy-master-0-nsxldyaml"},"C.4.OPTION_1.1 Make the copy of the ",(0,i.kt)("inlineCode",{parentName:"h4"},"pvc-data-dir-dai-xld-digitalai-deploy-master-0.yaml")," for the later reference, to the ",(0,i.kt)("inlineCode",{parentName:"h4"},"pvc-data-dir-dai-xld-digitalai-deploy-master-0-nsxld.yaml"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Edit file ",(0,i.kt)("inlineCode",{parentName:"p"},"pvc-data-dir-dai-xld-digitalai-deploy-master-0-nsxld.yaml"),":"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Delete all the lines under sections:")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"status")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"spec.volumneMode")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"spec.volumneName")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.uid")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.resourceVersion")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.namespace")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.creationTimestamp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.finalizers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.pv.kubernetes.io/bind-completed")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.pv.kubernetes.io/bound-by-controller"))),(0,i.kt)("ol",{parentName:"li",start:2},(0,i.kt)("li",{parentName:"ol"},"Rename following lines by adding namespace name:")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.name")," from data-dir-dai-xld-digitalai-deploy-master-0 to data-dir-dai-xld-nsxld-digitalai-deploy-master-0"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.labels.release")," from dai-xld to dai-xld-nsxld"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.meta.helm.sh/release-namespace")," from default to nsxld"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.meta.helm.sh/release-name")," from dai-xld to dai-xld-nsxld\nThe renaming rule is to replace any occurrence of ",(0,i.kt)("inlineCode",{parentName:"li"},"dai-xld")," with ",(0,i.kt)("inlineCode",{parentName:"li"},"dai-xld-{{custom_namespace_name}}")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Create those PVCs, but inside the Namespace \u201cnsxld\u201d:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl apply -f pvc-data-dir-dai-xld-digitalai-deploy-master-0-nsxld.yaml -n nsxld\npersistentvolumeclaim/dai-xld-nsxld-digitalai-deploy-master-0 created\n\u276f kubectl apply -f pvc-data-dir-dai-xld-digitalai-deploy-worker-0-nsxld.yaml -n nsxld\npersistentvolumeclaim/dai-xld-nsxld-digitalai-deploy-worker-0 created\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Check if PVC is bound\nCheck the PVCs state, which will probably in Pending state, and after some time in Bound state:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl get pvc -n nsxld\nNAME                                      STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS          AGE\ndai-xld-nsxld-digitalai-deploy-master-0   Bound    pvc-fba6fe7c-143e-4af8-b974-0e5ec06b3ea8   10Gi       RWO            aws-efs-provisioner   3m54s\ndai-xld-nsxld-digitalai-deploy-worker-0   Bound    pvc-88fc1c15-dfab-4495-80df-9baed3af22de   10Gi       RWO            aws-efs-provisioner   28s\n")))),(0,i.kt)("h4",{id:"c4option_12"},"C.4.OPTION_1.2"),(0,i.kt)("h5",{id:"c4option_12-master---start-following-pods"},"C.4.OPTION_1.2 Master - Start following pods"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Put following in file ",(0,i.kt)("inlineCode",{parentName:"li"},"pod-dai-xld-master-pv-access-nsxld.yaml")," (don't forget to update nsxld with real namespace name):",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'  ```yaml\n  apiVersion: v1\n  kind: Pod\n  metadata:\n    name: dai-xld-master-pv-access-nsxld\n  spec:\n    containers:\n      - name: sleeper\n        command: ["sleep", "1d"]\n        image: xebialabs/tiny-tools:22.2.0\n        imagePullPolicy: Always\n        volumeMounts:\n          - name: data-dir\n            mountPath: /opt/xebialabs/xl-deploy-server/work\n            subPath: work\n          - name: data-dir\n            mountPath: /opt/xebialabs/xl-deploy-server/conf\n            subPath: conf\n          - name: data-dir\n            mountPath: /opt/xebialabs/xl-deploy-server/centralConfiguration\n            subPath: centralConfiguration\n          - name: data-dir\n            mountPath: /opt/xebialabs/xl-deploy-server/ext\n            subPath: ext\n          - name: data-dir\n            mountPath: /opt/xebialabs/xl-deploy-server/hotfix/lib\n            subPath: lib\n          - name: data-dir\n            mountPath: /opt/xebialabs/xl-deploy-server/hotfix/plugins\n            subPath: plugins\n          - name: data-dir\n            mountPath: /opt/xebialabs/xl-deploy-server/hotfix/satellite-lib\n            subPath: satellite-lib\n          - name: data-dir\n            mountPath: /opt/xebialabs/xl-deploy-server/log\n            subPath: log\n    restartPolicy: Never\n    volumes:\n      - name: reports-dir\n        persistentVolumeClaim:\n          claimName: data-dir-dai-xld-nsxld-digitalai-deploy-master-0\n  ```\n')),"Update the claimName with correct name!"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:2},(0,i.kt)("li",{parentName:"ol"},"Start the pod",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl apply -f pod-dai-xld-master-pv-access-nsxld.yaml -n nsxld\n"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:3},(0,i.kt)("li",{parentName:"ol"},"Put following in file ",(0,i.kt)("inlineCode",{parentName:"li"},"pod-dai-xld-master-pv-access-default.yaml")," for the default namespace:")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: dai-xld-master-pv-access-default\nspec:\n  containers:\n    - name: sleeper\n      command: ["sleep", "1d"]\n      image: xebialabs/tiny-tools:22.2.0\n      imagePullPolicy: Always\n      volumeMounts:\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/work\n          subPath: work\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/conf\n          subPath: conf\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/centralConfiguration\n          subPath: centralConfiguration\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/ext\n          subPath: ext\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/hotfix/lib\n          subPath: lib\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/hotfix/plugins\n          subPath: plugins\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/hotfix/satellite-lib\n          subPath: satellite-lib\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/log\n          subPath: log\n  restartPolicy: Never\n  volumes:\n    - name: data-dir\n      persistentVolumeClaim:\n        claimName: data-dir-dai-xld-digitalai-deploy-master-0\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:4},(0,i.kt)("li",{parentName:"ol"},"Start the pod")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl apply -f pod-dai-xld-master-pv-access-default.yaml -n default\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:5},(0,i.kt)("li",{parentName:"ol"},"Copy data from one pod to ")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl exec -n default dai-xld-master-pv-access-default -- tar cf - \\\n    /opt/xebialabs/xl-deploy-server/centralConfiguration \\\n    /opt/xebialabs/xl-deploy-server/conf \\\n    /opt/xebialabs/xl-deploy-server/ext \\\n    /opt/xebialabs/xl-deploy-server/log \\\n    /opt/xebialabs/xl-deploy-server/work \\\n    /opt/xebialabs/xl-deploy-server/hotfix/lib \\\n    /opt/xebialabs/xl-deploy-server/hotfix/plugins \\\n    /opt/xebialabs/xl-deploy-server/hotfix/satellite-lib \\\n    | kubectl exec -n nsxld -i dai-xld-master-pv-access-nsxld -- tar xvf - -C /    \n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:6},(0,i.kt)("li",{parentName:"ol"},"Chmod of the moved folder as below")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl exec -n nsxld -i dai-xld-master-pv-access-nsxld -- chmod -R 777 /opt/xebialabs/xl-deploy-server/centralConfiguration/\n\u276f kubectl exec -n nsxld -i dai-xld-master-pv-access-nsxld -- chmod -R 777 /opt/xebialabs/xl-deploy-server/conf/\n\u276f kubectl exec -n nsxld -i dai-xld-master-pv-access-nsxld -- chmod -R 777 /opt/xebialabs/xl-deploy-server/ext/\n\u276f kubectl exec -n nsxld -i dai-xld-master-pv-access-nsxld -- chmod -R 777 /opt/xebialabs/xl-deploy-server/log/\n\u276f kubectl exec -n nsxld -i dai-xld-master-pv-access-nsxld -- chmod -R 777 /opt/xebialabs/xl-deploy-server/work/\n\u276f kubectl exec -n nsxld -i dai-xld-master-pv-access-nsxld -- chmod -R 777 /opt/xebialabs/xl-deploy-server/hotfix/lib/\n\u276f kubectl exec -n nsxld -i dai-xld-master-pv-access-nsxld -- chmod -R 777 /opt/xebialabs/xl-deploy-server/hotfix/plugins/\n\u276f kubectl exec -n nsxld -i dai-xld-master-pv-access-nsxld -- chmod -R 777 /opt/xebialabs/xl-deploy-server/hotfix/satellite-lib/\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:7},(0,i.kt)("li",{parentName:"ol"},"Delete the pods")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl delete pod dai-xld-master-pv-access-nsxld -n nsxld\n\u276f kubectl delete pod dai-xld-master-pv-access-default -n default\n")))),(0,i.kt)("h5",{id:"c4option_12-worker---start-following-pods"},"C.4.OPTION_1.2 Worker - Start following pods"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Put following in file ",(0,i.kt)("inlineCode",{parentName:"li"},"pod-dai-xld-worker-pv-access-nsxld.yaml")," (don't forget to update nsxld with real namespace name):")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If version below 22.0.",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: dai-xld-worker-pv-access-nsxld\nspec:\n  containers:\n    - name: sleeper\n      command: ["sleep", "1d"]\n      image: xebialabs/tiny-tools:22.2.0\n      imagePullPolicy: Always\n      volumeMounts:\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/work\n          subPath: work\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/conf\n          subPath: conf\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/centralConfiguration\n          subPath: centralConfiguration\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/ext\n          subPath: ext\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/hotfix/lib\n          subPath: lib\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/hotfix/plugins\n          subPath: plugins\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/hotfix/satellite-lib\n          subPath: satellite-lib\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/log\n          subPath: log\n  restartPolicy: Never\n  volumes:\n    - name: reports-dir\n      persistentVolumeClaim:\n        claimName: data-dir-dai-xld-nsxld-digitalai-deploy-worker-0\n'))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If xl-deploy version above 22.0"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: dai-xld-worker-pv-access-nsxld\nspec:\n  containers:\n    - name: sleeper\n      command: ["sleep", "1d"]\n      image: xebialabs/tiny-tools:22.2.0\n      imagePullPolicy: Always\n      volumeMounts:\n        - name: data-dir\n          mountPath: /opt/xebialabs/deploy-task-engine/work\n          subPath: work\n        - name: data-dir\n          mountPath: /opt/xebialabs/deploy-task-engine/conf\n          subPath: conf\n        - name: data-dir\n          mountPath: /opt/xebialabs/deploy-task-engine/centralConfiguration\n          subPath: centralConfiguration\n        - name: data-dir\n          mountPath: /opt/xebialabs/deploy-task-engine/ext\n          subPath: ext\n        - name: data-dir\n          mountPath: /opt/xebialabs/deploy-task-engine/hotfix/lib\n          subPath: lib\n        - name: data-dir\n          mountPath: /opt/xebialabs/deploy-task-engine/hotfix/plugins\n          subPath: plugins\n        - name: data-dir\n          mountPath: /opt/xebialabs/deploy-task-engine/hotfix/satellite-lib\n          subPath: satellite-lib\n        - name: data-dir\n          mountPath: /opt/xebialabs/deploy-task-engine/log\n          subPath: log\n  restartPolicy: Never\n  volumes:\n    - name: reports-dir\n      persistentVolumeClaim:\n        claimName: data-dir-dai-xld-nsxld-digitalai-deploy-worker-0\n')),(0,i.kt)("p",{parentName:"li"}," Update the claimName with correct name!")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:2},(0,i.kt)("li",{parentName:"ol"},"Start the pod",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl apply -f pod-dai-xld-worker-pv-access-nsxld.yaml -n nsxld\n"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:3},(0,i.kt)("li",{parentName:"ol"},"Put following in file ",(0,i.kt)("inlineCode",{parentName:"li"},"pod-dai-xld-worker-pv-access-default.yaml")," for the default namespace:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: dai-xld-worker-pv-access-default\nspec:\n  containers:\n    - name: sleeper\n      command: ["sleep", "1d"]\n      image: xebialabs/tiny-tools:22.2.0\n      imagePullPolicy: Always\n      volumeMounts:\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/work\n          subPath: work\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/conf\n          subPath: conf\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/centralConfiguration\n          subPath: centralConfiguration\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/ext\n          subPath: ext\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/hotfix/lib\n          subPath: lib\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/hotfix/plugins\n          subPath: plugins\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/hotfix/satellite-lib\n          subPath: satellite-lib\n        - name: data-dir\n          mountPath: /opt/xebialabs/xl-deploy-server/log\n          subPath: log\n  restartPolicy: Never\n  volumes:\n    - name: data-dir\n      persistentVolumeClaim:\n        claimName: data-dir-dai-xld-digitalai-deploy-worker-0\n'))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:4},(0,i.kt)("li",{parentName:"ol"},"Start the pod",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl apply -f pod-dai-xld-worker-pv-access-default.yaml -n default\n"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:5},(0,i.kt)("li",{parentName:"ol"},"Copy data from one pod.")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If the xl-deploy version is below 22.0"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl exec -n default dai-xld-worker-pv-access-default -- tar cf - \\\n    /opt/xebialabs/xl-deploy-server/centralConfiguration \\\n    /opt/xebialabs/xl-deploy-server/conf \\\n    /opt/xebialabs/xl-deploy-server/ext \\\n    /opt/xebialabs/xl-deploy-server/log \\\n    /opt/xebialabs/xl-deploy-server/work \\\n    /opt/xebialabs/xl-deploy-server/hotfix/lib \\\n    /opt/xebialabs/xl-deploy-server/hotfix/plugins \\\n    /opt/xebialabs/xl-deploy-server/hotfix/satellite-lib \\\n    | kubectl exec -n nsxld -i dai-xld-worker-pv-access-nsxld -- tar xvf - -C /\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If xl-deploy version is above 22.0, copy the file to local directory from pod ","[dai-xld-worker-pv-access-default]"," and copy the same file from local directory to pod ","[dai-xld-worker-pv-access-nsxld]"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Copying the centralConfiguration folder from dai-xld-worker-pv-access-default pod to local directory. ",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl cp -n default dai-xld-digitalai-deploy-worker-0:/opt/xebialabs/xl-deploy-server/centralConfiguration /home/sishwarya/SprintTicket/S-84982_ns_xld_migration/B-defaultns-downtime/pv_backup/option1-deploy/nsxld/data/centralConfiguration\n"))),(0,i.kt)("li",{parentName:"ul"},"Copying the centralConfiguration folder from local directory to pod dai-xld-worker-pv-access-nsxld.",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl cp /home/sishwarya/SprintTicket/S-84982_ns_xld_migration/B-defaultns-downtime/pv_backup/option1-deploy/nsxld/data/work -n nsxld dai-xld-worker-pv-access-nsxld:/opt/xebialabs/deploy-task-engine/\n")))),(0,i.kt)("p",{parentName:"li"},"Do the above steps for all directory which we need to migrate. eg: ext, log, work, etc.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:6},(0,i.kt)("li",{parentName:"ol"},"Chmod of the moved folder",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl exec -n nsxld -i dai-xld-worker-pv-access-nsxld -- chmod -R 777 /opt/xebialabs/xl-deploy-server/work/\n\u276f kubectl exec -n nsxld -i dai-xld-worker-pv-access-nsxld -- chmod -R 777 /opt/xebialabs/xl-deploy-server/conf/\n"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:7},(0,i.kt)("li",{parentName:"ol"},"Delete the pods")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\u276f kubectl delete pod dai-xld-worker-pv-access-nsxld -n nsxld\n\u276f kubectl delete pod dai-xld-worker-pv-access-default -n default\n")))),(0,i.kt)("h3",{id:"c4option_2-move-existing-pvc-to-the-custom-namespace-by-reusing-pv"},"C.4.OPTION_2 Move existing PVC to the custom namespace by reusing PV"),(0,i.kt)("p",null,"Following option will reuse PV in the new namespace, rollback of the option is more complicated. "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Delete all the current PVCs in the namespace ",(0,i.kt)("inlineCode",{parentName:"li"},"default"))),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl delete pvc data-dir-dai-xld-digitalai-deploy-master-0 -n default\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:2},(0,i.kt)("li",{parentName:"ol"},"See that the related PV Status will be changed from ",(0,i.kt)("inlineCode",{parentName:"li"},"Bound")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"Released"),":")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl get pv pvc-1df72d76-7970-43fa-b30f-77b6a0d07239 pvc-3f4052d9-a614-4d0f-a886-a5699dac4d5e -n default\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS     CLAIM                                                STORAGECLASS          REASON   AGE\npvc-1df72d76-7970-43fa-b30f-77b6a0d07239   10Gi       RWO            Retain           Released   default/data-dir-dai-xld-digitalai-deploy-master-0   aws-efs-provisioner            5h55m\npvc-3f4052d9-a614-4d0f-a886-a5699dac4d5e   10Gi       RWO            Retain           Released   default/data-dir-dai-xld-digitalai-deploy-worker-0   aws-efs-provisioner            5h55m\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:3},(0,i.kt)("li",{parentName:"ol"},"Edit each one of the PVs to remove the old references with claim:")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl edit pv pvc-1df72d76-7970-43fa-b30f-77b6a0d07239\n")),(0,i.kt)("p",{parentName:"li"},"Remove lines like following example:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'...\nclaimRef:\n    apiVersion: v1\n    kind: PersistentVolumeClaim\n    name: data-dir-dai-xld-digitalai-deploy-master-0\n    namespace: default\n    resourceVersion: "23284462"\n    uid: 53564205-6e1e-45f0-9dcf-e21adefa6eaf\n...\n')),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'...\nclaimRef:\n  apiVersion: v1\n  kind: PersistentVolumeClaim\n  name: data-dir-dai-xld-digitalai-deploy-worker-0\n  namespace: default\n  resourceVersion: "34085986"\n  uid: c7a3176c-9721-472b-94a3-dd5132a550a1\n...\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:4},(0,i.kt)("li",{parentName:"ol"},"Check that there are no references anymore in the CLAIM column:")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl get pv pvc-1df72d76-7970-43fa-b30f-77b6a0d07239 pvc-3f4052d9-a614-4d0f-a886-a5699dac4d5e -n default\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS          REASON   AGE\npvc-1df72d76-7970-43fa-b30f-77b6a0d07239   10Gi       RWO            Retain           Available           aws-efs-provisioner            5h58m\npvc-3f4052d9-a614-4d0f-a886-a5699dac4d5e   10Gi       RWO            Retain           Available           aws-efs-provisioner            5h58m\n")))),(0,i.kt)("h4",{id:"c4option_21-make-the-copy-of-the-pvc-data-dir-dai-xld-digitalai-deploy-master-0yaml-for-the-later-reference-to-the-pvc-data-dir-dai-xld-digitalai-deploy-master-0-nsxldyaml"},"C.4.OPTION_2.1 Make the copy of the ",(0,i.kt)("inlineCode",{parentName:"h4"},"pvc-data-dir-dai-xld-digitalai-deploy-master-0.yaml")," for the later reference, to the ",(0,i.kt)("inlineCode",{parentName:"h4"},"pvc-data-dir-dai-xld-digitalai-deploy-master-0-nsxld.yaml"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Edit file ",(0,i.kt)("inlineCode",{parentName:"li"},"pvc-data-dir-dai-xld-digitalai-deploy-master-0-nsxld.yaml"),":")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Delete all the lines under sections:")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"status")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"spec.volumneMode")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"spec.volumneName")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.uid")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.resourceVersion")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.namespace")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.creationTimestamp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.finalizers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.pv.kubernetes.io/bind-completed")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.pv.kubernetes.io/bound-by-controller")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:2},(0,i.kt)("li",{parentName:"ol"},"Rename following lines by adding namespace name:")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.name")," from data-dir-dai-xld-digitalai-deploy-master-0 to data-dir-dai-xld-nsxld-digitalai-deploy-master-0"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.labels.release")," from dai-xld to dai-xld-nsxld"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.meta.helm.sh/release-namespace")," from default to nsxld"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata.annotations.meta.helm.sh/release-name")," from dai-xld to dai-xld-nsxld\nThe renaming rule is to replace any occurrence of ",(0,i.kt)("inlineCode",{parentName:"li"},"dai-xld")," with ",(0,i.kt)("inlineCode",{parentName:"li"},"dai-xld-{{custom_namespace_name}}"))))),(0,i.kt)("p",{parentName:"li"},"Similarly do the above steps for other PVs ","[eg: Worker, postgresql ]")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:2},(0,i.kt)("li",{parentName:"ol"},"Create those PVCs again, but inside the Namespace \u201cnsxld\u201d:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl apply -f pvc-data-dir-dai-xld-digitalai-deploy-master-0-nsxld.yaml -n nsxld\npersistentvolumeclaim/data-dir-dai-xld-nsxld-digitalai-deploy-master-0 created\n\u276f kubectl apply -f pvc-data-dir-dai-xld-digitalai-deploy-worker-0-nsxld.yaml -n nsxld\npersistentvolumeclaim/data-dir-dai-xld-nsxld-digitalai-deploy-worker-0 created\n\u276f kubectl apply -f pvc-data-dai-xld-postgresql-0-nsxld.yaml -n nsxld\npersistentvolumeclaim/data-dai-xld-nsxld-postgresql-0 created\n"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:3},(0,i.kt)("li",{parentName:"ol"},"Check the PVCs state, which will probably in Pending state, and after some time in Bound state:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"\u276f kubectl get pv\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                                                    STORAGECLASS          REASON   AGE\npvc-1df72d76-7970-43fa-b30f-77b6a0d07239   10Gi       RWO            Retain           Bound    nsxld/data-dir-dai-xld-nsxld-digitalai-deploy-worker-0   aws-efs-provisioner            6h39m\npvc-2ccabe5e-c540-42c4-92c9-08bbac24e306   50Gi       RWO            Retain           Bound    nsxld/data-dai-xld-nsxld-postgresql-0                    aws-efs-provisioner            6h39m\npvc-3f4052d9-a614-4d0f-a886-a5699dac4d5e   10Gi       RWO            Retain           Bound    nsxld/data-dir-dai-xld-nsxld-digitalai-deploy-master-0   aws-efs-provisioner            6h39m\n"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ol",{parentName:"li",start:4},(0,i.kt)("li",{parentName:"ol"},"On the moved PV for the deploy, if you need to modify, delete or empty some folders, do that with following.")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Create the master pod in custom namespace ","[eg: nsxdd]",", Similar to step C.4.OPTION_1.2 Master - Start following pods.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Connect to the master pod",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"}," \u276f kubectl exec -it dai-xld-master-pv-access-nsxld -- sh\n"))),(0,i.kt)("li",{parentName:"ul"},"Remove/Update the file if required."))),(0,i.kt)("li",{parentName:"ul"},"Delete the master pod.")),(0,i.kt)("p",{parentName:"li"},"Similarly do it for worker if required.\n"))),(0,i.kt)("h3",{id:"c4option_3-clone-existing-pvc-to-the-custom-namespace-by-csi-volume-cloning"},"C.4.OPTION_3 Clone existing PVC to the custom namespace by CSI Volume Cloning"),(0,i.kt)("p",null,"Please check following document if this option is possible for your Persisted Volume setup (there are some limitations when it is possible):"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/"},"CSI Volume Cloning")))}c.isMDXComponent=!0}}]);